name: ci-cd

on: [push]

env:
  FELL_GITHUB_TOKEN: ${{ secrets.FELL_GITHUB_TOKEN }}
  DOCUMENT_META_AUTH_TOKEN: ${{ secrets.DOCUMENT_META_AUTH_TOKEN }}
  DOCUMENT_META_GIST_ID: ${{ secrets.DOCUMENT_META_GIST_ID }}
  DOCUMENT_META_GIST_FILENAME: ${{ secrets.DOCUMENT_META_GIST_FILENAME }}
  CLOUD_STORAGE_BUCKET_URL: ${{ secrets.CLOUD_STORAGE_BUCKET_URL }}
  DOCS_REPOS_ROOT: ${{ github.workspace }}
  NETLIFY_API_TOKEN: ${{ secrets.NETLIFY_API_TOKEN }}

jobs:
  cancel:
    name: cancel-previous-runs
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - uses: styfle/cancel-workflow-action@0.3.1
        with:
          workflow_id: 1155909
          access_token: ${{ github.token }}

  test:
    name: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: bahmutov/npm-install@v1
      - name: compile
        run: |
          yarn compile types
          yarn compile env
          yarn compile adoc-utils
          yarn compile adoc-lint
          yarn compile slack
          yarn compile cloud
          yarn compile lulu
          yarn compile doc-html
      - name: test
        run: yarn test -w=2

  ts-lint:
    name: ts-lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: bahmutov/npm-install@v1
      - name: ts:lint
        run: yarn ts:lint

  jones-build:
    name: jones-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: bahmutov/npm-install@v1
        with:
          working-directory: packages/jones
      - name: compile
        run: yarn compile jones
      - name: jones:build
        run: yarn jones:build

  evans-ts-check:
    name: evans-ts-check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: bahmutov/npm-install@v1
        with:
          working-directory: packages/evans
      - name: compile
        run: yarn compile evans
      - name: check-ts
        run: yarn evans:ts:check

  evans-build-en:
    name: evans-build-en
    runs-on: ubuntu-latest
    steps:
      - name: set-short-sha
        run: echo ::set-env name=SHORT_SHA::$(echo $GITHUB_SHA | cut -c1-7)
      - uses: actions/checkout@v2
      - uses: jwalton/gh-find-current-pr@v1
        id: findPr
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: bahmutov/npm-install@v1
        with:
          working-directory: packages/evans
      - name: compile
        run: yarn compile evans
      - name: fell-clone
        run: yarn fell:fresh-clone
      - name: evans-build-en
        run: yarn evans:build:en
      - name: deploy
        id: deploy
        if: ${{ success() }}
        env:
          PR_NUMBER: ${{ steps.findPr.outputs.number }}
          PR_TITLE: ${{ steps.findPr.outputs.title }}
          DEPLOY_SITE_ID: ${{ secrets.DEPLOY_SITE_ID_EN }}
        run: yarn evans:deploy
      - name: deploy-comment
        if: ${{ steps.deploy.outputs.deployUrl && steps.findPr.outputs.number }}
        env:
          PR_NUMBER: ${{ steps.findPr.outputs.number }}
          DEPLOY_URL: ${{ steps.deploy.outputs.deployUrl }}
        run: |
          curl -sL -X POST -d "{\"body\":\"[EN preview $SHORT_SHA]($DEPLOY_URL)\"}" \
            -H "Content-Type: application/json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/$GITHUB_REPOSITORY/issues/$PR_NUMBER/comments"

  evans-build-es:
    name: evans-build-es
    runs-on: ubuntu-latest
    steps:
      - name: set-short-sha
        run: echo ::set-env name=SHORT_SHA::$(echo $GITHUB_SHA | cut -c1-7)
      - uses: actions/checkout@v2
      - uses: jwalton/gh-find-current-pr@v1
        id: findPr
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: bahmutov/npm-install@v1
        with:
          working-directory: packages/evans
      - name: compile
        run: yarn compile evans
      - name: fell-clone
        run: yarn fell:fresh-clone
      - name: evans-build-es
        run: yarn evans:build:es
      - name: deploy
        id: deploy
        if: ${{ success() }}
        env:
          PR_NUMBER: ${{ steps.findPr.outputs.number }}
          PR_TITLE: ${{ steps.findPr.outputs.title }}
          DEPLOY_SITE_ID: ${{ secrets.DEPLOY_SITE_ID_ES }}
        run: yarn evans:deploy
      - name: deploy-comment
        if: ${{ steps.deploy.outputs.deployUrl && steps.findPr.outputs.number }}
        env:
          PR_NUMBER: ${{ steps.findPr.outputs.number }}
          DEPLOY_URL: ${{ steps.deploy.outputs.deployUrl }}
        run: |
          curl -sL -X POST -d "{\"body\":\"[ES preview $SHORT_SHA]($DEPLOY_URL)\"}" \
            -H "Content-Type: application/json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/$GITHUB_REPOSITORY/issues/$PR_NUMBER/comments"

  cover-build-and-check:
    name: cover-build-and-check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: bahmutov/npm-install@v1
        with:
          working-directory: packages/cover-web-app
      - name: compile
        run: yarn compile cover-web-app
      - name: cover:ts:check
        run: yarn cover:ts:check
      - name: cover:build
        run: yarn cover:build

  styleguide-build:
    name: styleguide-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: bahmutov/npm-install@v1
        with:
          working-directory: packages/styleguide
      - name: styleguide:build
        run: yarn styleguide:build
