type Document implements Node {
  altLanguageUrl: String
  editions: [Edition!]!
}

type Edition @dontInfer {
  description: String
  audio: Audio
  chapterHeadings: [ChapterHeading!]!
  customCode: CustomCode!
  type: String!
  isbn: String!
  path: String!
  paperbackCoverBlurb: String!
  filename: EditionFilename!
  numChapters: Int!
  friendSlug: String!
  documentSlug: String!
  printSize: String!
  pages: [Int!]!
  price: Int!
  editor: String
  splits: [Int!]
  cartItemTitles: [String!]!
  cartItemInteriorPdfUrls: [String!]!
  cartItemCoverPdfUrls: [String!]!
  downloadUrl: EditionDownloadUrl!
}

type EditionDownloadUrl {
  web_pdf: String!
  mobi: String!
  epub: String!
}

type EditionFilename {
  epub: String!
  mobi: String!
  web_pdf: String!
  paperback_cover: String!
  paperback_interior: String!
}

type ChapterHeading {
  id: String!
  text: String!
  shortText: String
  sequence: ChapterHeadingSequence
}

type ChapterHeadingSequence {
  type: String!
  number: Int!
}

type Audio {
  reader: String!
  url: String!
  podcastUrl: String!
  parts: [AudioPart!]!
}

type AudioPart {
  seconds: Int!
  filesizeHq: Int!
  filesizeLq: Int!
  externalIdHq: Int!
  externalIdLq: Int!
  title: String!
  chapters: [Int!]!
}

type CustomCode {
  css: CustomCodeFiles!
  html: CustomCodeFiles!
}

type CustomCodeFiles {
  paperback_interior: String
  paperback_cover: String
  all: String
  pdf: String
}
